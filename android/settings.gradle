pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def propertiesFile = new File(rootProject.projectDir, 'local.properties')
        if (propertiesFile.exists()) {
            propertiesFile.withReader('UTF-8') { reader -> properties.load(reader) }
        }
        def flutterSdk = properties.getProperty('flutter.sdk')
        assert flutterSdk != null, "flutter.sdk not set in local.properties"
        return flutterSdk
    }()

    includeBuild("${flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    plugins {
        id 'com.android.application' version '8.1.0'
        id 'com.android.library' version '7.3.1'
        id 'org.jetbrains.kotlin.android' version '1.8.0'
        id 'dev.flutter.flutter-plugin-loader' version '1.0.0'
        id 'dev.flutter.flutter-gradle-plugin' version '1.0.0'
    }
}

include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
